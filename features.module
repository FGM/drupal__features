<?php

/**
 * @file
 * Main hooks for Features module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function features_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.features':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Features module provides a user interface for exporting bundles of configuration into modules. For more information, see the online documentation for <a href="!url">Features module</a>', array(
        '!url' => 'http://drupal.org/node/2404427',
      )) . '</p>';
      return $output;
    case 'features.assignment':
      $output = '';
      $output .= '<p>' . t('Manage bundles and assignment methods and select the order in which they will be run.') . '</p>';
      return $output;
    case 'features.export':
      $output = '';
      $output .= '<p>' . t('Export bundles of configuration into modules.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_file_download().
 */
function features_file_download($uri) {
  $scheme = file_uri_scheme($uri);
  $target = file_uri_target($uri);
  $archive_name = \Drupal::config('features.settings')->get('profile.machine_name') . '.tar.gz';
  if ($scheme == 'temporary' && $target == $archive_name) {
    return array(
      'Content-disposition' => 'attachment; filename="' . $archive_name . '"',
    );
  }
}

/**
 * Implements hook_modules_installed().
 */
function features_modules_installed($modules) {
  if (!in_array('features', $modules)) {
    $assigner = \Drupal::service('features_assigner');
    $assigner->purgeConfiguration();
  }
}
